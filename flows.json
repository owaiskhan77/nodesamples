[
    {
        "id": "fe058ad1849932aa",
        "type": "tab",
        "label": "test",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "99999b8a6931f0b2",
        "type": "tab",
        "label": "SmartMeterUI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7e34b34baabd0adc",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 24,
                "cy": 6,
                "px": 1,
                "py": 1
            }
        }
    },
    {
        "id": "afea3e73df80298e",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5ad478847c2d5ed0",
        "type": "ui_group",
        "name": "Configure Days",
        "tab": "afea3e73df80298e",
        "order": 1,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "91e0bd3a7a01f1c1",
        "type": "ui_group",
        "name": "Srinagar Smart Meters",
        "tab": "afea3e73df80298e",
        "order": 3,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "79d43152ec87748f",
        "type": "ui_group",
        "name": "Jammu Smart Meters",
        "tab": "afea3e73df80298e",
        "order": 2,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "75f5394b01c07d88",
        "type": "ui_group",
        "name": "Graphs",
        "tab": "afea3e73df80298e",
        "order": 4,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3a6aa5e1d59f4f1f",
        "type": "ui_tab",
        "name": "RateConfiguration",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9b8d585caa85f70e",
        "type": "ui_group",
        "name": "Configuration",
        "tab": "3a6aa5e1d59f4f1f",
        "order": 1,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7b368e5a4be11b54",
        "type": "ui_group",
        "name": "Calculation",
        "tab": "3a6aa5e1d59f4f1f",
        "order": 4,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "aec02b256d365ffd",
        "type": "mui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "m-base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "m-page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "m-page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "m-page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "m-group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "m-widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "m-widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "m-widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "0bb96cd4266e1789",
        "type": "ui_group",
        "name": "RateParameter",
        "tab": "3a6aa5e1d59f4f1f",
        "order": 2,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "029f50fc25d66306",
        "type": "ui_group",
        "name": "BillDateSummary",
        "tab": "afea3e73df80298e",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "918eaa1814b8248e",
        "type": "ui_dropdown",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "RateCode",
        "tooltip": "",
        "place": "Select option",
        "group": "9b8d585caa85f70e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            },
            {
                "label": "Domestic",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Non Domestic Commercial",
                "value": "2",
                "type": "str"
            },
            {
                "label": "State / Central Deptts.",
                "value": "3",
                "type": "str"
            },
            {
                "label": "Agriculture",
                "value": "4",
                "type": "str"
            },
            {
                "label": "Public Street Lights",
                "value": "5",
                "type": "str"
            },
            {
                "label": "LT PHE",
                "value": "6.1",
                "type": "str"
            },
            {
                "label": "HT PHE",
                "value": "6.2",
                "type": "str"
            },
            {
                "label": "LT Industrial",
                "value": "7.1",
                "type": "str"
            },
            {
                "label": "HT Industrial",
                "value": "7.2",
                "type": "str"
            },
            {
                "label": "Power Intensive Load",
                "value": "7.3",
                "type": "str"
            },
            {
                "label": "General Purpose Bulk Supply",
                "value": "8",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 200,
        "y": 40,
        "wires": [
            [
                "2b2ddbc9097d5019"
            ]
        ]
    },
    {
        "id": "c5cf542dff364ce2",
        "type": "ui_numeric",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "AddUnits",
        "tooltip": "",
        "group": "9b8d585caa85f70e",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}} Kwh",
        "min": 0,
        "max": "100000",
        "step": "1",
        "className": "",
        "x": 160,
        "y": 480,
        "wires": [
            [
                "8d3b6a9493a26b96"
            ]
        ]
    },
    {
        "id": "6978aba3869692b8",
        "type": "ui_numeric",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "Sanctioned Load",
        "tooltip": "",
        "group": "9b8d585caa85f70e",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}Kw",
        "min": 0,
        "max": "100000",
        "step": "1",
        "className": "",
        "x": 170,
        "y": 600,
        "wires": [
            [
                "6f5d226a54c0c14b"
            ]
        ]
    },
    {
        "id": "2b2ddbc9097d5019",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rc",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 200,
        "wires": [
            [
                "f1ca1223049a81f8",
                "9a1463b566d310bd",
                "8da582bd2798c2b3"
            ]
        ]
    },
    {
        "id": "8d3b6a9493a26b96",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "units",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "f1ca1223049a81f8"
            ]
        ]
    },
    {
        "id": "f57f4595ee830744",
        "type": "ui_button",
        "z": "fe058ad1849932aa",
        "name": "",
        "group": "9b8d585caa85f70e",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 70,
        "y": 200,
        "wires": [
            [
                "918eaa1814b8248e",
                "c5cf542dff364ce2",
                "bb187e8e5262722d",
                "2b2ddbc9097d5019",
                "8d3b6a9493a26b96",
                "6978aba3869692b8",
                "6f5d226a54c0c14b",
                "114d4a70ded986d1",
                "43988f0755b9b74d"
            ]
        ]
    },
    {
        "id": "f1ca1223049a81f8",
        "type": "function",
        "z": "fe058ad1849932aa",
        "name": "",
        "func": "var ec=0;\nvar ed=0;\nvar dc=0;\nvar domt=[];\nvar amt=0;\nvar ip=0;\nswitch(flow.get('rc'))\n{   \n    case '1':\n        switch(flow.get('flat'))\n        {\n            case false:\n                ip=flow.get('units');\n                if (ip <=100)\n                {domt.push({'RateComponent':'0-100Units','Charge':ip*1.69},\n                {'RateComponent':'Total EC','Charge':ip*1.69})\n                ec=ip*1.69;\n                ed=Math.round(ec*0.15);\n                domt.push({'RateComponent':'Electricity Duty','Charge':ed});\n                break;\n                }\n                else if (ip>100 && ip <=200)\n                {domt.push({'RateComponent':'0-100Units','Charge':169},\n                {'RateComponent':'100-200Units','Charge':(ip-100)*2.2},\n                {'RateComponent':'Total EC','Charge':169+(ip-100)*2.2}\n                )\n                ec=169+(ip-100)*2.2;\n                ed=Math.round(ec*0.15);\n                domt.push({'RateComponent':'Electricity Duty','Charge':ed});\n                break;\n                }\n                else if (ip>200 && ip <=400)\n                {domt.push({'RateComponent':'0-100Units','Charge':169},\n                {'RateComponent':'100-200Units','Charge':220},\n                {'RateComponent':'200-400Units','Charge':(ip-200)*3.3},\n                {'RateComponent':'Total EC','Charge':389+((ip-200)*3.3)})\n                ec=389+((ip-200)*3.3);\n                ed=Math.round(ec*0.15);\n                domt.push({'RateComponent':'Electricity Duty','Charge':ed});\n                break;\n                }\n                else if(ip > 400)\n                {domt.push({'RateComponent':'0-100Units','Charge':169},\n                {'RateComponent':'100-200Units','Charge':220},\n                {'RateComponent':'200-400Units','Charge':660},\n                {'RateComponent':'Above-400Units','Charge':(ip-400)*3.52},\n                {'RateComponent':'Total EC','Charge':1049+((ip-400)*3.52)})\n                ec=1049+((ip-400)*3.52);\n                ed=Math.round(ec*0.15);\n                domt.push({'RateComponent':'Electricity Duty','Charge':ed});\n                break;\n               }break;\n            case true:\n                var sload=flow.get('sl');\n                if (sload<=0.25){domt.push({'RateComponent':'upto 1/4 kW','Charge':99});ec=99;break;}\n                else if(sload>0.25 && sload<=0.5){domt.push({'RateComponent':'above 1/4 kW upto 1/2 kW ','Charge':325});ec=325;break;}\n                else if(sload>0.5 && sload<=0.75){domt.push({'RateComponent':'above 1/2 kW upto 3/4 kW ','Charge':495});ec=495;break;}\n                else if(sload>0.75 && sload <=1){domt.push({'RateComponent':'above 3/4 kW upto 1 kW ','Charge':650});ec=650;break;}\n                else if(sload>1 && sload <=2){ec=650+(Math.ceil((sload-1)/0.25)*155);\n                    domt.push({'RateComponent':'above 1 KW upto 2 KW ','Charge':ec});break;}\n                else if(sload>2){ec=1270+(Math.ceil((sload-2)/0.25)*155);\n                    domt.push({'RateComponent':'above 2 KW ','Charge':ec});break;}\n        }break;\n\n    case '2':\n        switch(flow.get('flat'))\n        {case false:\n            ip=flow.get('units');\n            if (flow.get('phase')==3){ec=ip*5.01;domt.push({'RateComponent':'For All Units','Charge':ec});break;}\n        }break;\n    case '3':\n        msg.payload = flow.get('units')*5.52;\n        break;  \n    default:\n        msg.payload = flow.get('units')*6.52;\n\n    \n}\nswitch(flow.get('rc'))\n{ case '1':\n    switch(flow.get('flat')){    \n        case false:\n            dc=flow.get('sl')*5.5;\n            domt.push({'RateComponent':'Demand Charges','Charge':dc});\n            domt.push({'RateComponent':'Total Bill Amount','Charge':ec+ed+dc})\n            break;\n        case true:\n            domt.push({'RateComponent':'Electricity Duty','Charge':ec*0.15});\n            domt.push({'RateComponent':'Total Bill Amount','Charge':ec*1.15});\n            break;}break;\n  case '2':\n    switch(flow.get('flat'))\n    {    \n        case false:\n            if(flow.get('phase')==3)\n                {dc=Math.ceil(flow.get('sl')/0.5)*52.25;\n                ed=ec*0.15;\n                domt.push({'RateComponent':'Demand Charges','Charge':dc});\n                domt.push({'RateComponent':'Total Bill Amount','Charge':ec+ed+dc});break;\n                \n                }\n            else {break;}break;\n        case true:\n            {break;}\n        \n    }  \n}\n\n\nmsg.payload=domt;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 420,
        "wires": [
            [
                "d1b006ac9615e6d1"
            ]
        ]
    },
    {
        "id": "d1b006ac9615e6d1",
        "type": "ui_table",
        "z": "fe058ad1849932aa",
        "group": "7b368e5a4be11b54",
        "name": "",
        "order": 1,
        "width": 4,
        "height": 5,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 910,
        "y": 320,
        "wires": []
    },
    {
        "id": "bb187e8e5262722d",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 280,
        "wires": [
            [
                "d1b006ac9615e6d1"
            ]
        ]
    },
    {
        "id": "6f5d226a54c0c14b",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sl",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 480,
        "wires": [
            [
                "f1ca1223049a81f8"
            ]
        ]
    },
    {
        "id": "ab168107e6c6978b",
        "type": "ui_ui_control",
        "z": "fe058ad1849932aa",
        "name": "",
        "events": "all",
        "x": 760,
        "y": 160,
        "wires": [
            [
                "fffb357f1bfbaf0a"
            ]
        ]
    },
    {
        "id": "fffb357f1bfbaf0a",
        "type": "ui_numeric",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "Phase",
        "tooltip": "",
        "group": "0bb96cd4266e1789",
        "order": 1,
        "width": 3,
        "height": 3,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "1",
        "max": "3",
        "step": "2",
        "className": "",
        "x": 910,
        "y": 100,
        "wires": [
            [
                "3a1157cb3352fb7e"
            ]
        ]
    },
    {
        "id": "9a1463b566d310bd",
        "type": "function",
        "z": "fe058ad1849932aa",
        "name": "",
        "func": "switch(flow.get('rc'))\n{ \n    case '1':\n    msg.payload=\n    {\"group\":\n    {\"hide\":[\"RateConfiguration_RateParameter\"],\"show\":[]}\n    }\n    break;\n    case '2':\n    msg.payload=\n    {\"group\":\n    {\"hide\":[],\"show\":[\"RateConfiguration_RateParameter\"]}\n    }    \n    break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 200,
        "wires": [
            [
                "ab168107e6c6978b"
            ]
        ]
    },
    {
        "id": "114d4a70ded986d1",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": " {   \"group\":     {\"hide\":[\"RateConfiguration_RateParameter\"],\"show\":[]}    } ",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 120,
        "wires": [
            [
                "ab168107e6c6978b"
            ]
        ]
    },
    {
        "id": "818b3d0495f0921c",
        "type": "ui_switch",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "FlatRate",
        "tooltip": "",
        "group": "9b8d585caa85f70e",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 720,
        "y": 620,
        "wires": [
            [
                "0143b7f629342c23"
            ]
        ]
    },
    {
        "id": "8da582bd2798c2b3",
        "type": "switch",
        "z": "fe058ad1849932aa",
        "name": "",
        "property": "rc",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 390,
        "y": 540,
        "wires": [
            [
                "3fd273803c86c42f"
            ],
            [
                "3fd273803c86c42f"
            ],
            [
                "43988f0755b9b74d"
            ]
        ]
    },
    {
        "id": "3fd273803c86c42f",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 540,
        "wires": [
            [
                "818b3d0495f0921c"
            ]
        ]
    },
    {
        "id": "43988f0755b9b74d",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 640,
        "wires": [
            [
                "818b3d0495f0921c"
            ]
        ]
    },
    {
        "id": "0143b7f629342c23",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "flat",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 540,
        "wires": [
            [
                "2e10f95800270d49"
            ]
        ]
    },
    {
        "id": "2e10f95800270d49",
        "type": "debug",
        "z": "fe058ad1849932aa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 620,
        "wires": []
    },
    {
        "id": "3a1157cb3352fb7e",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "phase",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b71ea77d46ce47f4",
        "type": "ui_button",
        "z": "99999b8a6931f0b2",
        "name": "",
        "group": "5ad478847c2d5ed0",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "a",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 70,
        "y": 40,
        "wires": [
            [
                "88afb3b01aa57023",
                "4429d83f4f6b9b34"
            ]
        ]
    },
    {
        "id": "d184b79f9555777b",
        "type": "debug",
        "z": "99999b8a6931f0b2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 40,
        "wires": []
    },
    {
        "id": "30ac7b69e563703e",
        "type": "change",
        "z": "99999b8a6931f0b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "(\t$a:=(payload[ \t    (Meter.$string().$substring(0,1)='4') and \t    ($floor(\t        ($toMillis($now())-$toMillis(`Last Billable Read`,'[D]-[M]-[Y] [H#01]:[m01]:[s01]')\t        )/86400000)) <=  $flowContext('days') ]\t{Collector:$count(Meter)});\t$b:={'Total Meters':$sum($each($a,function($v,$k){$v}))};\t$c:=$merge([$a,$b]);\t$d:=$each($c,function($v,$k){'Collector:'&$k&',Count:'&$v});\t$e:=$d.[$split(',')]{$[0]:$[1]};\t$f:=$each($e,function($v,$k){{$k.$split(':')[0]:$k.$split(':')[1],$v.$split(':')[0]:$v.$split(':')[1]}});\t\t\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 100,
        "wires": [
            [
                "a217bfdc32724f4e"
            ]
        ]
    },
    {
        "id": "0ee97373942df155",
        "type": "ui_button",
        "z": "99999b8a6931f0b2",
        "name": "",
        "group": "5ad478847c2d5ed0",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[{}]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 70,
        "y": 380,
        "wires": [
            [
                "a217bfdc32724f4e",
                "6741d7d9949222f3",
                "dd2d19659f772bd6",
                "49ec4c4470a0148d"
            ]
        ]
    },
    {
        "id": "a217bfdc32724f4e",
        "type": "ui_table",
        "z": "99999b8a6931f0b2",
        "group": "91e0bd3a7a01f1c1",
        "name": "Srinagar Collectors",
        "order": 1,
        "width": 5,
        "height": 9,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 870,
        "y": 100,
        "wires": []
    },
    {
        "id": "6741d7d9949222f3",
        "type": "ui_table",
        "z": "99999b8a6931f0b2",
        "group": "79d43152ec87748f",
        "name": "Jammu Collectors",
        "order": 1,
        "width": 5,
        "height": 9,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 830,
        "y": 180,
        "wires": []
    },
    {
        "id": "e41cd9321de563aa",
        "type": "change",
        "z": "99999b8a6931f0b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "(\t$a:=(payload[ \t    (Meter.$string().$substring(0,1)='3') and \t    ($floor(\t        ($toMillis($now())-$toMillis(`Last Billable Read`,'[D]-[M]-[Y] [H#01]:[m01]:[s01]')\t        )/86400000)) <= $flowContext('days') ]\t{Collector:$count(Meter)});\t$b:={'Total Meters':$sum($each($a,function($v,$k){$v}))};\t$c:=$merge([$a,$b]);\t$d:=$each($c,function($v,$k){'Collector:'&$k&',Count:'&$v});\t$e:=$d.[$split(',')]{$[0]:$[1]};\t$f:=$each($e,function($v,$k){{$k.$split(':')[0]:$k.$split(':')[1],$v.$split(':')[0]:$v.$split(':')[1]}});\t\t\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 140,
        "wires": [
            [
                "6741d7d9949222f3"
            ]
        ]
    },
    {
        "id": "95e1a5150b7de370",
        "type": "ui_numeric",
        "z": "99999b8a6931f0b2",
        "name": "",
        "label": "Select Last Billable Read Days",
        "tooltip": "",
        "group": "5ad478847c2d5ed0",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "120",
        "step": 1,
        "className": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "a0af3566ffceb3f8"
            ]
        ]
    },
    {
        "id": "a0af3566ffceb3f8",
        "type": "change",
        "z": "99999b8a6931f0b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "days",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "dd2d19659f772bd6",
        "type": "change",
        "z": "99999b8a6931f0b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "days",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 70,
        "y": 240,
        "wires": [
            [
                "95e1a5150b7de370"
            ]
        ]
    },
    {
        "id": "f86cfdd578131cda",
        "type": "change",
        "z": "99999b8a6931f0b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"labels\":$distinct(payload.(\t        $substring($string(Meter),0,1)=\"4\" ? 'Srinagar'\t    : ($substring($string(Meter),0,1)=\"3\" ? 'Jammu' : 'NA'))\t\t),\t \"data\":$each(payload{`Status Code` :$each({\t    $substring($string(Meter),0,1):$count(Meter)},\t    function($v){$v}) },function($v){$v}),\t \"series\":$keys(payload{`Status Code`:{$substring($string(Meter),0,1):$count(Meter)}})\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 280,
        "wires": [
            [
                "7964fdb9182f6fc4"
            ]
        ]
    },
    {
        "id": "7964fdb9182f6fc4",
        "type": "ui_chart",
        "z": "99999b8a6931f0b2",
        "name": "",
        "group": "75f5394b01c07d88",
        "order": 1,
        "width": 5,
        "height": 9,
        "label": "All Meter Details",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "0",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 720,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "49ec4c4470a0148d",
        "type": "change",
        "z": "99999b8a6931f0b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"labels\":[],\"data\":[],\"series\":[]}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 360,
        "wires": [
            [
                "7964fdb9182f6fc4",
                "055894d9e16f7b19"
            ]
        ]
    },
    {
        "id": "7313a58514606374",
        "type": "ui_template",
        "z": "99999b8a6931f0b2",
        "group": "5ad478847c2d5ed0",
        "name": "ProgressBar",
        "order": 4,
        "width": 5,
        "height": 1,
        "format": "<style>\n    .w3-border {\n        border: 1px solid #ccc!important;\n    }\n    .w3-green, .w3-hover-green:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n    }\n</style>\n<div>\n    <div class=\"w3-border\">\n      <div class=\"w3-green\" style=\"height:5px; width:{{msg.counter}}%\"></div>\n        <div class=\"progress\">\n      <div class=\"determinate\" style=\"width: 70%\"></div>\n        </div>\n</div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 850,
        "y": 600,
        "wires": [
            [
                "025d6114157a13dd"
            ]
        ]
    },
    {
        "id": "88afb3b01aa57023",
        "type": "counter-loop",
        "z": "99999b8a6931f0b2",
        "name": "",
        "counter": "counter",
        "counterType": "msg",
        "reset": true,
        "resetValue": "value-null",
        "initial": "1",
        "initialType": "num",
        "operator": "lt",
        "termination": "100",
        "terminationType": "num",
        "increment": "1",
        "incrementType": "num",
        "x": 410,
        "y": 560,
        "wires": [
            [
                "7313a58514606374"
            ],
            [
                "7313a58514606374"
            ]
        ]
    },
    {
        "id": "cbf3cc5e03056899",
        "type": "delay",
        "z": "99999b8a6931f0b2",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 170,
        "y": 600,
        "wires": [
            [
                "88afb3b01aa57023"
            ]
        ]
    },
    {
        "id": "025d6114157a13dd",
        "type": "switch",
        "z": "99999b8a6931f0b2",
        "name": "continue if counter is defined",
        "property": "counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 740,
        "wires": [
            [
                "cbf3cc5e03056899"
            ]
        ]
    },
    {
        "id": "4429d83f4f6b9b34",
        "type": "file in",
        "z": "99999b8a6931f0b2",
        "name": "",
        "filename": "d:\\jlab\\report.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 240,
        "y": 40,
        "wires": [
            [
                "40cb097c5b76e0fc"
            ]
        ]
    },
    {
        "id": "40cb097c5b76e0fc",
        "type": "fastcsv",
        "z": "99999b8a6931f0b2",
        "name": "fastcsv",
        "headers": true,
        "headerstr": "",
        "ignoreEmpty": true,
        "discardUnmappedColumns": true,
        "strictColumnHandling": false,
        "delimiter": ",",
        "quote": "\"",
        "escape": "\"",
        "comment": "#",
        "ltrim": false,
        "rtrim": false,
        "rowDelimiter": "\\n",
        "includeEndRowDelimiter": false,
        "quoteHeaders": false,
        "quoteColumns": false,
        "x": 390,
        "y": 40,
        "wires": [
            [
                "30ac7b69e563703e",
                "e41cd9321de563aa",
                "f86cfdd578131cda",
                "d184b79f9555777b",
                "55d1a08a6c14119c"
            ]
        ]
    },
    {
        "id": "055894d9e16f7b19",
        "type": "ui_chart",
        "z": "99999b8a6931f0b2",
        "name": "",
        "group": "029f50fc25d66306",
        "order": 1,
        "width": 5,
        "height": 9,
        "label": "BillDate Summary",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "0",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 770,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "55d1a08a6c14119c",
        "type": "change",
        "z": "99999b8a6931f0b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\t[{\t    \"labels\":$distinct(payload.(\t        $substring($string(Meter),0,1)=\"4\" ? 'Srinagar'\t    : ($substring($string(Meter),0,1)=\"3\" ? 'Jammu' : 'NA'))\t\t),\t    \"data\":$each(payload[`Last Billable Read`]{($floor(($toMillis($now())-$toMillis(`Last Billable Read`,'[D]-[M]-[Y] [H#01]:[m01]:[s01]')\t        )/(86400000*7)))<1 ? 'Below-Week':\t            (($floor(($toMillis($now())-$toMillis(`Last Billable Read`,'[D]-[M]-[Y] [H#01]:[m01]:[s01]')\t        )/(86400000*7)))>=1 and\t            ($floor(($toMillis($now())-$toMillis(`Last Billable Read`,'[D]-[M]-[Y] [H#01]:[m01]:[s01]')\t        )/(86400000*7)))<=3) ? 'Week-Month':'Above-Month':$each({\t    $substring($string(Meter),0,1):$count(Meter)},\t    function($v){$v})},function($v){$v}\t),\t\"series\":$keys(payload[`Last Billable Read`]{\t($floor(($toMillis($now())-$toMillis(`Last Billable Read`,'[D]-[M]-[Y] [H#01]:[m01]:[s01]')\t        )/(86400000*7)))<1 ? '1.Below-Week':\t            (($floor(($toMillis($now())-$toMillis(`Last Billable Read`,'[D]-[M]-[Y] [H#01]:[m01]:[s01]')\t        )/(86400000*7)))>=1 and\t            ($floor(($toMillis($now())-$toMillis(`Last Billable Read`,'[D]-[M]-[Y] [H#01]:[m01]:[s01]')\t        )/(86400000*7)))<=3) ? '2.Week-Month':'3.Above-Month':$count(Meter)}\t)\t}\t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 420,
        "wires": [
            [
                "055894d9e16f7b19"
            ]
        ]
    }
]