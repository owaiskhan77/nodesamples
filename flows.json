[
    {
        "id": "fe058ad1849932aa",
        "type": "tab",
        "label": "RateConfig",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "99999b8a6931f0b2",
        "type": "tab",
        "label": "SmartMeterUI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d7fc6821db1af157",
        "type": "tab",
        "label": "FileLister",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7e34b34baabd0adc",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#617709",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#617709",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#617709",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#9bbe0e",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#617709",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 24,
                "cy": 6,
                "px": 1,
                "py": 1
            }
        }
    },
    {
        "id": "afea3e73df80298e",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5ad478847c2d5ed0",
        "type": "ui_group",
        "name": "Configure Days",
        "tab": "afea3e73df80298e",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "75f5394b01c07d88",
        "type": "ui_group",
        "name": "Graphs",
        "tab": "afea3e73df80298e",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3a6aa5e1d59f4f1f",
        "type": "ui_tab",
        "name": "RateConfiguration",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9b8d585caa85f70e",
        "type": "ui_group",
        "name": "Configuration",
        "tab": "3a6aa5e1d59f4f1f",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7b368e5a4be11b54",
        "type": "ui_group",
        "name": "Calculation",
        "tab": "3a6aa5e1d59f4f1f",
        "order": 4,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "160e81fb.f1c86e",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "b63d1f91.68095",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "b63d1f91.68095",
        "type": "ui_tab",
        "name": "Files",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2c4dd6577eea3d7b",
        "type": "ui_spacer",
        "z": "fe058ad1849932aa",
        "name": "spacer",
        "group": "7b368e5a4be11b54",
        "order": 2,
        "width": 8,
        "height": 1
    },
    {
        "id": "34704005c23dcf37",
        "type": "ui_spacer",
        "z": "fe058ad1849932aa",
        "name": "spacer",
        "group": "7b368e5a4be11b54",
        "order": 3,
        "width": 8,
        "height": 1
    },
    {
        "id": "d0209098a295d926",
        "type": "ui_spacer",
        "z": "fe058ad1849932aa",
        "name": "spacer",
        "group": "7b368e5a4be11b54",
        "order": 4,
        "width": 8,
        "height": 1
    },
    {
        "id": "339197c67ea7fb13",
        "type": "ui_spacer",
        "z": "fe058ad1849932aa",
        "name": "spacer",
        "group": "7b368e5a4be11b54",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "f18ba21cdc1239d4",
        "type": "easy-oracle-config",
        "name": "Production Jammu",
        "host": "172.19.3.52",
        "port": "1625",
        "database": "CCBPROD",
        "user": "owais",
        "password": "wipro123"
    },
    {
        "id": "a895b7f0de77b268",
        "type": "ui_group",
        "name": "Data",
        "tab": "b63d1f91.68095",
        "order": 2,
        "disp": true,
        "width": 17,
        "collapse": false,
        "className": ""
    },
    {
        "id": "411f3d7a7b6898b7",
        "type": "ui_spacer",
        "z": "d7fc6821db1af157",
        "name": "spacer",
        "group": "160e81fb.f1c86e",
        "order": 7,
        "width": 11,
        "height": 1
    },
    {
        "id": "b1376e2c4dfa8b6e",
        "type": "ui_group",
        "name": "CC & B Consumer Count",
        "tab": "afea3e73df80298e",
        "order": 3,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "918eaa1814b8248e",
        "type": "ui_dropdown",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "RateCode",
        "tooltip": "",
        "place": "Select option",
        "group": "9b8d585caa85f70e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            },
            {
                "label": "Domestic",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Non Domestic Commercial",
                "value": "2",
                "type": "str"
            },
            {
                "label": "State / Central Deptts.",
                "value": "3",
                "type": "str"
            },
            {
                "label": "Agriculture",
                "value": "4",
                "type": "str"
            },
            {
                "label": "Public Street Lights",
                "value": "5",
                "type": "str"
            },
            {
                "label": "LT PHE",
                "value": "6.1",
                "type": "str"
            },
            {
                "label": "HT PHE",
                "value": "6.2",
                "type": "str"
            },
            {
                "label": "LT Industrial",
                "value": "7.1",
                "type": "str"
            },
            {
                "label": "HT Industrial",
                "value": "7.2",
                "type": "str"
            },
            {
                "label": "Power Intensive Load",
                "value": "7.3",
                "type": "str"
            },
            {
                "label": "General Purpose Bulk Supply",
                "value": "8",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "2b2ddbc9097d5019"
            ]
        ]
    },
    {
        "id": "c5cf542dff364ce2",
        "type": "ui_numeric",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "AddUnits",
        "tooltip": "",
        "group": "9b8d585caa85f70e",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{flow.get('loadunits')}}",
        "min": 0,
        "max": "999999",
        "step": "1",
        "className": "",
        "x": 320,
        "y": 240,
        "wires": [
            [
                "8d3b6a9493a26b96"
            ]
        ]
    },
    {
        "id": "6978aba3869692b8",
        "type": "ui_numeric",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "Sanctioned Load",
        "tooltip": "",
        "group": "9b8d585caa85f70e",
        "order": 3,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100000",
        "step": "1",
        "className": "",
        "x": 230,
        "y": 520,
        "wires": [
            [
                "6f5d226a54c0c14b"
            ]
        ]
    },
    {
        "id": "2b2ddbc9097d5019",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rc",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 40,
        "wires": [
            [
                "9a1463b566d310bd",
                "8da582bd2798c2b3",
                "2482b5670303ad3f",
                "7ab4ef6958198881",
                "e8acd40f0c5361b3",
                "f2a7a4165c53b8e1",
                "c70ab51d827b652b"
            ]
        ]
    },
    {
        "id": "8d3b6a9493a26b96",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "units",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 220,
        "wires": [
            [
                "2482b5670303ad3f",
                "e8acd40f0c5361b3"
            ]
        ]
    },
    {
        "id": "f57f4595ee830744",
        "type": "ui_button",
        "z": "fe058ad1849932aa",
        "name": "",
        "group": "9b8d585caa85f70e",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 70,
        "y": 260,
        "wires": [
            [
                "918eaa1814b8248e",
                "bb187e8e5262722d",
                "2b2ddbc9097d5019",
                "43988f0755b9b74d",
                "3b7fe9085a6eade4"
            ]
        ]
    },
    {
        "id": "d1b006ac9615e6d1",
        "type": "ui_table",
        "z": "fe058ad1849932aa",
        "group": "7b368e5a4be11b54",
        "name": "",
        "order": 1,
        "width": "8",
        "height": "7",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1730,
        "y": 180,
        "wires": []
    },
    {
        "id": "bb187e8e5262722d",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 420,
        "wires": [
            [
                "d1b006ac9615e6d1"
            ]
        ]
    },
    {
        "id": "6f5d226a54c0c14b",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sl",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 320,
        "wires": [
            [
                "2482b5670303ad3f",
                "7ab4ef6958198881",
                "e8acd40f0c5361b3"
            ]
        ]
    },
    {
        "id": "fffb357f1bfbaf0a",
        "type": "ui_numeric",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "Phase",
        "tooltip": "",
        "group": "9b8d585caa85f70e",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "1",
        "max": "3",
        "step": "4",
        "className": "",
        "x": 1130,
        "y": 40,
        "wires": [
            [
                "3a1157cb3352fb7e"
            ]
        ]
    },
    {
        "id": "9a1463b566d310bd",
        "type": "function",
        "z": "fe058ad1849932aa",
        "name": "",
        "func": "switch(flow.get('rc'))\n{ \n    case \"1\":\n    msg.payload=\"KW\"\n    msg.options=[\"KW\"]\n    break;\n    case \"2\":\n    msg.payload=\"KW\"\n    msg.options=[\"KW\"]\n    break;\n    case \"3\":\n    msg.payload=\"KW\"\n    msg.options=[\"KW\"];break;\n    case \"4\":\n    msg.payload=\"HP\"\n    msg.options=[\"HP\"];break;\n    case \"7.1\":\n    msg.payload=\"KW\"\n    msg.options=[\"KW\",\"HP\",\"KVA\"];break;\n    case \"7.2\":\n    msg.payload=\"KVA\"\n    msg.options=[\"KVA\",\"KW\"];break;\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 40,
        "wires": [
            [
                "9ece371a7ebc8c39"
            ]
        ]
    },
    {
        "id": "818b3d0495f0921c",
        "type": "ui_switch",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "FlatRate",
        "tooltip": "",
        "group": "9b8d585caa85f70e",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1060,
        "y": 780,
        "wires": [
            [
                "0143b7f629342c23"
            ]
        ]
    },
    {
        "id": "8da582bd2798c2b3",
        "type": "switch",
        "z": "fe058ad1849932aa",
        "name": "",
        "property": "rc",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7.1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7.2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 130,
        "y": 700,
        "wires": [
            [
                "3fd273803c86c42f",
                "72274631d670d262"
            ],
            [
                "3fd273803c86c42f",
                "72274631d670d262"
            ],
            [
                "43988f0755b9b74d",
                "72274631d670d262"
            ],
            [
                "3fd273803c86c42f",
                "72274631d670d262"
            ],
            [
                "9093038d52a193c3",
                "43988f0755b9b74d"
            ],
            [
                "72274631d670d262",
                "43988f0755b9b74d",
                "eff27d14cd0d81e6"
            ]
        ]
    },
    {
        "id": "3fd273803c86c42f",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 500,
        "wires": [
            [
                "818b3d0495f0921c"
            ]
        ]
    },
    {
        "id": "43988f0755b9b74d",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 680,
        "wires": [
            [
                "818b3d0495f0921c",
                "9ff8269b230a2210"
            ]
        ]
    },
    {
        "id": "0143b7f629342c23",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "flat",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 640,
        "wires": [
            [
                "2482b5670303ad3f"
            ]
        ]
    },
    {
        "id": "3a1157cb3352fb7e",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "phase",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 40,
        "wires": [
            [
                "2482b5670303ad3f"
            ]
        ]
    },
    {
        "id": "2482b5670303ad3f",
        "type": "function",
        "z": "fe058ad1849932aa",
        "name": "fnDom/Comm/SC/Agri/LTI",
        "func": "var ec=0;\nvar ed=0;\nvar dc=0;\nvar domt=[];\nvar out=[];\nvar amt=0;\nvar ip=0;\nvar sload=flow.get('sl');\nvar dom=function(rc,level,lc,ec,dc,text=''){\nvar objDom=[{\"1\":{'RateComponent':'0-100Units','Charge':169},\"2\":{'RateComponent':'0-100Units','Charge':281},\n\"3P\":{'RateComponent':'Energy Charges ','Charge':0},\"4\":{'RateComponent':'Energy Charges'+text,'Charge':0},\n\"7.1A\":{'RateComponent':'Energy Charges ','Charge':0},\"7.1B\":{'RateComponent':'Energy Charges'+text ,'Charge':0}\n},\n{\"1\":{'RateComponent':'100-200Units','Charge':220},\"2\":{'RateComponent':'100-200Units','Charge':297}},\n{\"1\":{'RateComponent':'200-400Units','Charge':330},\"2\":{'RateComponent':'200-300Units','Charge':429}},\n{\"1\":{'RateComponent':'Above 400Units','Charge':0},\"2\":{'RateComponent':'Above 300Units','Charge':0}}]\n\nfor (let i=0;i <=level;i++)\n{ domt.push(objDom[i][rc]);\nif (i==level && flow.get('capacitor')==false ){domt[i][\"Charge\"]=lc;\nlet cap=Math.ceil(ec*0.1);\ndomt.push(\n    //{'RateComponent':'Energy charges','Charge':ec},\n\t{'RateComponent':'Capacitor Charges','Charge':cap},\n\t{'RateComponent':'Total Energy Charges','Charge':Math.ceil(ec+cap)},\n\t{'RateComponent':'Electricity Duty','Charge':Math.ceil((ec+cap)*0.15)},\n\t{'RateComponent':'Demand Charges'+text,'Charge':dc},\n\t{'RateComponent':'Total Bill Amount','Charge':Math.ceil(ec+Math.ceil((ec+cap)*0.15)+dc+cap)})}\nelse if (i==level){domt[i][\"Charge\"]=lc;\ndomt.push({'RateComponent':'Total Energy charges','Charge':ec},\n\t{'RateComponent':'Electricity Duty','Charge':Math.ceil(ec*0.15)},\n\t{'RateComponent':'Demand Charges'+text,'Charge':dc},\n\t{'RateComponent':'Total Bill Amount','Charge':Math.ceil(ec+Math.ceil(ec*0.15)+dc)})}\n }\n\nreturn domt;\n}\nvar domflat=function(ec){domt.push({'RateComponent':'Electricity Duty','Charge':ec*0.15},\n{'RateComponent':'Total Bill Amount','Charge':Math.ceil(ec*1.15)});\nreturn domt;}\nvar ratecode=flow.get('rc');\nswitch(flow.get('rc'))\n{   \n    case '1':\n        switch(flow.get('flat'))\n        {\n            case false:\n                ip=flow.get('units');\n                if (ip <=100)\n                {\n                dom(ratecode,0,ip*1.69,ip*1.69,sload*5.5);\n                break;\n                }\n                else if (ip>100 && ip <=200)\n                {dom(ratecode,1,(ip-100)*2.2,169+(ip-100)*2.2,sload*5.5);\n                break;\n                }\n                else if (ip>200 && ip <=400)\n                {dom(ratecode,2,(ip-200)*3.3,389+(ip-200)*3.3,sload*5.5);\n                break;\n                }\n                else if(ip > 400)\n                {dom(ratecode,3,(ip-400)*3.52,1049+(ip-400)*3.52,sload*5.5);\n                break;\n               }break;\n            case true:\n             if (sload<=0.25){domt.push({'RateComponent':'upto 1/4 kW','Charge':99});ec=99;domflat(ec);break;}\n                else if(sload>0.25 && sload<=0.5){domt.push({'RateComponent':'above 1/4 kW upto 1/2 kW ','Charge':325});ec=325;domflat(ec);break;}\n                else if(sload>0.5 && sload<=0.75){domt.push({'RateComponent':'above 1/2 kW upto 3/4 kW ','Charge':495});ec=495;domflat(ec);break;}\n                else if(sload>0.75 && sload <=1){domt.push({'RateComponent':'above 3/4 kW upto 1 kW ','Charge':650});ec=650;domflat(ec);break;}\n                else if(sload>1 && sload <=2){ec=650+(Math.ceil((sload-1)/0.25)*155);\n                    domt.push({'RateComponent':'above 1 KW upto 2 KW ','Charge':ec});domflat(ec);break;}\n                else if(sload>2){ec=1270+(Math.ceil((sload-2)/0.25)*510);\n                    domt.push({'RateComponent':'above 2 KW ','Charge':ec});domflat(ec);break;}                \n\n        }break;\n    case '2':\n        \n        if(flow.get('phase')==3){\n            ip=flow.get('units');\n            dom(\"3P\",0,ip*5.01,ip*5.01,104.5*sload);break;}\n        else{    \n        switch(flow.get('flat'))\n        {\n            case false:\n                ip=flow.get('units');\n                if (ip <=100)\n                {\n                dom(ratecode,0,ip*2.81,ip*2.81,sload*44);\n                break;\n                }\n                else if (ip>100 && ip <=200)\n                {dom(ratecode,1,(ip-100)*2.97,281+(ip-100)*2.97,sload*44);\n                break;\n                }\n                else if (ip>200 && ip <=300)\n                {dom(ratecode,2,(ip-200)*4.29,578+(ip-200)*4.29,sload*44);\n                break;\n                }\n                else if(ip > 300)\n                {dom(ratecode,3,(ip-300)*4.62,1007+(ip-300)*4.62,sload*44);\n                break;\n               }break;\n            case true:\n             if (sload<=0.25){domt.push({'RateComponent':'upto 1/4 kW','Charge':310});ec=310;domflat(ec);break;}\n                else if(sload>0.25 && sload<=0.5){domt.push({'RateComponent':'above 1/4 kW upto 1/2 kW ','Charge':800});ec=800;domflat(ec);break;}\n                else if(sload>0.5 && sload<=1){domt.push({'RateComponent':'above 1/2 kW upto 1 kW ','Charge':1587});ec=1587;domflat(ec);break;}\n                else if(sload>1){ec=2136+(Math.ceil(sload-1)*2136);\n                    domt.push({'RateComponent':'above 1 KW ','Charge':ec});domflat(ec);break;}                \n\n        }\n            \n    }break;\n    case '3':\n        ip=flow.get('units');\n        sload=flow.get('sl');\n        {dom('3P',0,ip*6.88,ip*6.88,sload*30)}\n        break;\n    case '4':\n        switch(flow.get('flat'))\n        {\n        case false:\n            ip=flow.get('units');\n            if(sload<=10){dom('4',0,ip*0.66,ip*0.66,sload*15,'0-10HP');break}\n            if(sload>10 && sload<=20){dom('4',0,ip*0.72,ip*0.72,sload*20,'11-20HP');break}\n            if(sload>20){dom('4',0,ip*5.23,ip*5.23,sload*40,'Above 20HP');break}break;\n        case true:\n            if(sload<=10){domt.push({'RateComponent':'0-10HP','Charge':205.35*sload});ec=205.35*sload;domflat(ec);break}\n            if(sload>10 && sload<=20){domt.push({'RateComponent':'11-20HP','Charge':222*sload});ec=222*sload;domflat(ec);break}\n            if(sload>20){domt.push({'RateComponent':'Above 20HP','Charge':1415.25*sload});ec=1415.25*sload;domflat(ec);break}\n            \n        }break;\n    case '7.1':\n        switch(flow.get('loadunits'))\n        {case 'KW':\n            ip=flow.get('units');\n            if(sload<=50)\n            {dom('7.1A',0,ip*3.3,ip*3.3,sload*50);break}\n            else {dom('7.1B',0,(ip/0.85)*3.09,(ip/0.85)*3.09,(sload/0.89)*47,'(PF Applied)');break}break\n        case 'KVA':\n            ip=flow.get('units');\n            {dom('7.1A',0,ip*3.09,ip*3.09,sload*47);break}break\n        case 'HP':\n            ip=flow.get('units');\n            if(sload<=15 && flow.get('ltis')){dom('7.1A',0,ip*3.3,ip*3.3,sload*21);break}\n            else{dom('7.1A',0,ip*3.3,ip*3.3,sload*50);break}\n        }\n        break;\n        \n    default:\n        msg.payload = flow.get('units')*6.52;\n\n    \n}\nmsg.payload=domt;\nmsg.enabled=true;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 140,
        "wires": [
            [
                "53aed6072e62989e"
            ]
        ]
    },
    {
        "id": "aab0bb8d5566e270",
        "type": "inject",
        "z": "fe058ad1849932aa",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 730,
        "y": 900,
        "wires": [
            [
                "818b3d0495f0921c",
                "fdcef932ad8f31cf",
                "9ff8269b230a2210"
            ]
        ]
    },
    {
        "id": "9ece371a7ebc8c39",
        "type": "ui_dropdown",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "LIN",
        "tooltip": "",
        "place": "Select option",
        "group": "9b8d585caa85f70e",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 730,
        "y": 40,
        "wires": [
            [
                "df95cc93a199de23"
            ]
        ]
    },
    {
        "id": "df95cc93a199de23",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "loadunits",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 40,
        "wires": [
            [
                "2482b5670303ad3f",
                "7ab4ef6958198881",
                "e8acd40f0c5361b3"
            ]
        ]
    },
    {
        "id": "3b7fe9085a6eade4",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 120,
        "y": 420,
        "wires": [
            [
                "c5cf542dff364ce2",
                "6978aba3869692b8"
            ]
        ]
    },
    {
        "id": "fdcef932ad8f31cf",
        "type": "ui_switch",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "LTISII",
        "tooltip": "",
        "group": "9b8d585caa85f70e",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1030,
        "y": 560,
        "wires": [
            [
                "833539b33ae7c25a"
            ]
        ]
    },
    {
        "id": "9093038d52a193c3",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 560,
        "wires": [
            [
                "fdcef932ad8f31cf"
            ]
        ]
    },
    {
        "id": "833539b33ae7c25a",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ltis",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 460,
        "wires": [
            [
                "2482b5670303ad3f"
            ]
        ]
    },
    {
        "id": "72274631d670d262",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 620,
        "wires": [
            [
                "fdcef932ad8f31cf"
            ]
        ]
    },
    {
        "id": "9ff8269b230a2210",
        "type": "ui_switch",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "33kV/11kV",
        "tooltip": "",
        "group": "9b8d585caa85f70e",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 950,
        "y": 920,
        "wires": [
            [
                "c83c90fb915feb36"
            ]
        ]
    },
    {
        "id": "c83c90fb915feb36",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stype",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 880,
        "wires": [
            [
                "e8acd40f0c5361b3"
            ]
        ]
    },
    {
        "id": "eff27d14cd0d81e6",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 740,
        "wires": [
            [
                "9ff8269b230a2210"
            ]
        ]
    },
    {
        "id": "8d6a79ae5e3aa835",
        "type": "ui_switch",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "Capacitor",
        "tooltip": "",
        "group": "9b8d585caa85f70e",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 720,
        "y": 1000,
        "wires": [
            [
                "b9fdd3ac42bcb8d6"
            ]
        ]
    },
    {
        "id": "b3e1f068cd9fc576",
        "type": "inject",
        "z": "fe058ad1849932aa",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 430,
        "y": 1040,
        "wires": [
            [
                "8d6a79ae5e3aa835"
            ]
        ]
    },
    {
        "id": "b9fdd3ac42bcb8d6",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "capacitor",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 1000,
        "wires": [
            [
                "2482b5670303ad3f"
            ]
        ]
    },
    {
        "id": "7ab4ef6958198881",
        "type": "function",
        "z": "fe058ad1849932aa",
        "name": "",
        "func": "if(['7.2','7.3','8'].includes(flow.get('rc')) ){msg.enabled=false;msg.payload=false}\nelse if(flow.get('rc')=='1'){msg.enabled=false;msg.payload=true}\nelse if (flow.get('loadunits')=='KVA' && flow.get('rc')=='7.1' && flow.get('sl')>50) {msg.enabled=false;msg.payload=true}\nelse if (flow.get('rc')=='2' && flow.get('sl')<=5) {msg.enabled=false;msg.payload=true}\nelse {msg.enabled=true;msg.payload=false;msg.ratecode=flow.get('rc');msg.loadunits=flow.get('loadunits'),msg.sancload=flow.get('sl')}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 860,
        "wires": [
            [
                "8d6a79ae5e3aa835"
            ]
        ]
    },
    {
        "id": "21fb2626bdbaa2bf",
        "type": "ui_numeric",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "MaxDemand",
        "tooltip": "",
        "group": "7b368e5a4be11b54",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{flow.get('dem')}}",
        "min": 0,
        "max": "100000",
        "step": 1,
        "className": "",
        "x": 350,
        "y": 100,
        "wires": [
            [
                "024da9f07c32600f"
            ]
        ]
    },
    {
        "id": "e8acd40f0c5361b3",
        "type": "function",
        "z": "fe058ad1849932aa",
        "name": "HTI",
        "func": "var text='';\nvar domt=[];\nvar units=flow.get('units');\nvar sload=flow.get('sl');\nvar demand=flow.get('dem');\nvar effdemand=0;\nvar styp=flow.get('stype')\nvar ltype=flow.get('loadunits')\nif(ltype==\"KW\"){sload=sload/0.85}\nswitch (flow.get('rc'))\n{\n    case '7.2':\n        {\n        if  (demand<=0.75*sload){effdemand=0.75*sload}\n        else if (demand>0.75*sload && demand<=sload){effdemand=demand}\n        let ec=0;\n        let dc=0;\n        switch(styp)\n                {   \n                    case true:\n                    ec=units*2.95;\n                    dc=effdemand*136.5;\n                    if(flow.get('htlt') && sload>117.6471){ec=ec*1.05;dc=dc*1.05;text=' With 5pc SC'}\n                    domt.push(\n                \t{'RateComponent':'Total Energy Charges '+text,'Charge':ec},\n                \t{'RateComponent':'Electricity Duty','Charge':ec*0.15},\n                \t{'RateComponent':'Demand Charges '+text,'Charge':dc},\n                \t{'RateComponent':'Total Bill Amount','Charge':Math.ceil(ec+ec*0.15+dc)}); break;   \n                    case false:\n                    ec=units*2.86;\n                    dc=effdemand*136.5;\n                    domt.push(\n                \t{'RateComponent':'Total Energy Charges','Charge':ec},\n                \t{'RateComponent':'Electricity Duty','Charge':ec*0.15},\n                \t{'RateComponent':'Demand Charges','Charge':dc},\n                \t{'RateComponent':'Total Bill Amount','Charge':Math.ceil(ec+ec*0.15+dc)}); break;\n                \n                }\n        if (demand>sload)\n        {domt=[];\n        let excessdemand=0;\n        let excessUnits=0;\n        let excessdc=0;\n        let excessec=0;\n        let tec=0;\n        let tdc=0;\n        let ed=0;\n        switch(styp)\n            {\n                case true:\n                    excessdemand=demand-sload;\n                    excessUnits=units-(units/demand)*sload;\n                    dc=(sload*136.5)\n                    excessdc=(excessdemand*136.5*2)\n                    ec=(units/demand)*sload*2.95\n                    excessec=excessUnits*2.95*2\n                    tec=ec+excessec\n                    tdc=dc+excessdc\n                    ed=tec*0.15\n                    if(flow.get('htlt') && sload>117.6471){tec=tec*1.05;tdc=tdc*1.05;text=' With 5pc SC'}\n                    domt.push(\n                \t{'RateComponent':'Energy Charges for '+((units/demand)*sload).toFixed(2)+' Units','Charge':ec.toFixed(2)},\n                \t{'RateComponent':'Excess Energy Charges for '+excessUnits.toFixed(2)+' Units','Charge':excessec.toFixed(2)},\n                \t{'RateComponent':'Total Energy Charges'+text,'Charge':tec.toFixed(2)},\n                \t{'RateComponent':'Demand Charges for '+sload.toFixed(2)+' Load','Charge':dc.toFixed(2)},\n                \t{'RateComponent':'Excess Demand Charges for '+excessdemand.toFixed(2),'Charge':excessdc.toFixed(2)},\n                \t{'RateComponent':'Total Demand Charges'+text,'Charge':tdc.toFixed(2)},\n                \t{'RateComponent':'Electricity Duty','Charge':ed.toFixed(2)},\n                \t{'RateComponent':'Total Bill Amount','Charge':Math.ceil(tec+tdc+ed)});break;\n                case false:\n                    excessdemand=(demand-sload);\n                    excessUnits=(units-(units/demand)*sload);\n                    dc=(sload*136.5)\n                    excessdc=(excessdemand*136.5*2)\n                    ec=((units/demand)*sload*2.86)\n                    excessec=(excessUnits*2.86*2)\n                    tec=ec+excessec\n                    tdc=dc+excessdc\n                    ed=(tec*0.15)\n                    if(flow.get('htlt') && sload>117.6471){tec=tec*1.05;tdc=tdc*1.05;text=' With 5pc SC'}\n                    domt.push(\n                \t{'RateComponent':'Energy Charges for '+((units/demand)*sload).toFixed(2)+'Units','Charge':ec.toFixed(2)},\n                \t{'RateComponent':'Excess Energy Charges '+excessUnits.toFixed(2)+' Units','Charge':excessec.toFixed(2)},\n                \t{'RateComponent':'Total Energy Charges'+text,'Charge':tec.toFixed(2)},\n                \t{'RateComponent':'Demand Charges for '+sload.toFixed(2)+' Load','Charge':dc.toFixed(2)},\n                \t{'RateComponent':'Excess Demand Charges for'+excessdemand.toFixed(2),'Charge':excessdc.toFixed(2)},\n                \t{'RateComponent':'Total Demand Charges'+text,'Charge':tdc.toFixed(2)},\n                \t{'RateComponent':'Electricity Duty','Charge':ed.toFixed(2)},\n                \t{'RateComponent':'Total Bill Amount','Charge':Math.ceil(tec+tdc+ed)});break;\n                    \n                    \n            }\n        }    \n        }\n}\nmsg.payload=domt;\nmsg.enabled=true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 340,
        "wires": [
            [
                "d1b006ac9615e6d1"
            ]
        ]
    },
    {
        "id": "024da9f07c32600f",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dem",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 160,
        "wires": [
            [
                "e8acd40f0c5361b3"
            ]
        ]
    },
    {
        "id": "6d96831448fee4b4",
        "type": "inject",
        "z": "fe058ad1849932aa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "21fb2626bdbaa2bf",
                "c5cf542dff364ce2"
            ]
        ]
    },
    {
        "id": "53aed6072e62989e",
        "type": "gate",
        "z": "fe058ad1849932aa",
        "name": "",
        "controlTopic": "control",
        "defaultState": "open",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "memory",
        "x": 1490,
        "y": 180,
        "wires": [
            [
                "d1b006ac9615e6d1"
            ]
        ]
    },
    {
        "id": "f2a7a4165c53b8e1",
        "type": "function",
        "z": "fe058ad1849932aa",
        "name": "op Control",
        "func": "if (['7.2','7.3','8'].includes(flow.get('rc'))){msg.topic='control';msg.payload='close';}\nelse {msg.topic='control';msg.payload='open'}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 140,
        "wires": [
            [
                "53aed6072e62989e"
            ]
        ]
    },
    {
        "id": "f211dd8fb32f5c17",
        "type": "ui_switch",
        "z": "fe058ad1849932aa",
        "name": "",
        "label": "Meter on HT/LT",
        "tooltip": "",
        "group": "9b8d585caa85f70e",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1440,
        "y": 1120,
        "wires": [
            [
                "cd185735d4446c51"
            ]
        ]
    },
    {
        "id": "0565e7c1a48ef9e4",
        "type": "inject",
        "z": "fe058ad1849932aa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1370,
        "y": 900,
        "wires": [
            [
                "f211dd8fb32f5c17"
            ]
        ]
    },
    {
        "id": "c70ab51d827b652b",
        "type": "function",
        "z": "fe058ad1849932aa",
        "name": "",
        "func": "if(flow.get('rc')=='7.2'){msg.enabled=true}\nelse {msg.enabled=false}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 580,
        "wires": [
            [
                "f211dd8fb32f5c17"
            ]
        ]
    },
    {
        "id": "cd185735d4446c51",
        "type": "change",
        "z": "fe058ad1849932aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "htlt",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 640,
        "wires": [
            [
                "e8acd40f0c5361b3"
            ]
        ]
    },
    {
        "id": "b71ea77d46ce47f4",
        "type": "ui_button",
        "z": "99999b8a6931f0b2",
        "name": "",
        "group": "5ad478847c2d5ed0",
        "order": 3,
        "width": 10,
        "height": 1,
        "passthru": false,
        "label": "Get",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "a",
        "payloadType": "str",
        "topic": "select * from (select substr(z.adhoc_char_val,1,6) region,w.subdivision,cmtr.badge_nbr,to_char(start_dttm,'mm-yyyy') month from cisadm.ci_sa_sp c,cisadm.CI_SP_MTR_HIST SMH,cisadm.ci_mtr_config mcfg,cisadm.ci_mr mr,cisadm.ci_mtr cmtr,cisadm.ci_sa x,cisadm.ci_acct_char y,cisadm.ci_acct_char z,cisadm.xx_sdo w where c.sp_id=smh.sp_id and c.sa_id=x.sa_id and x.acct_id=y.acct_id and y.acct_id=z.acct_id and smh.mtr_config_id=mcfg.mtr_config_id and mcfg.mtr_config_id=mr.mtr_config_id and c.start_dttm=(select max(start_dttm) from cisadm.ci_sa_sp where sa_id=c.sa_id and start_mr_id <> ' ') and c.START_MR_ID=MR.MR_ID and mcfg.mtr_id=cmtr.mtr_id and y.char_type_cd='CM-SMART' and substr(z.adhoc_char_val,1,6)=w.region and z.char_type_cd='CC' and substr(z.adhoc_char_val,1,2)='02') pivot ( count(badge_nbr) for month in ('11-2021','12-2021','01-2022','02-2022','03-2022','04-2022','05-2022','06-2022','07-2022','08-2022','09-2022','10-2022','11-2022')) order by 1",
        "topicType": "str",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "88afb3b01aa57023",
                "4429d83f4f6b9b34",
                "96b2f69e17f51a17"
            ]
        ]
    },
    {
        "id": "0ee97373942df155",
        "type": "ui_button",
        "z": "99999b8a6931f0b2",
        "name": "",
        "group": "5ad478847c2d5ed0",
        "order": 2,
        "width": 10,
        "height": 1,
        "passthru": true,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[{}]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "a217bfdc32724f4e",
                "6741d7d9949222f3",
                "dd2d19659f772bd6",
                "49ec4c4470a0148d",
                "90747004d28d6bc7"
            ]
        ]
    },
    {
        "id": "a217bfdc32724f4e",
        "type": "ui_table",
        "z": "99999b8a6931f0b2",
        "group": "5ad478847c2d5ed0",
        "name": "Srinagar Collectors",
        "order": 6,
        "width": 5,
        "height": 6,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1250,
        "y": 100,
        "wires": []
    },
    {
        "id": "6741d7d9949222f3",
        "type": "ui_table",
        "z": "99999b8a6931f0b2",
        "group": "5ad478847c2d5ed0",
        "name": "Jammu Collectors",
        "order": 5,
        "width": 5,
        "height": 6,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1250,
        "y": 40,
        "wires": []
    },
    {
        "id": "95e1a5150b7de370",
        "type": "ui_numeric",
        "z": "99999b8a6931f0b2",
        "name": "",
        "label": "Select Last Billable Read Days",
        "tooltip": "",
        "group": "5ad478847c2d5ed0",
        "order": 1,
        "width": 10,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "365",
        "step": 1,
        "className": "",
        "x": 350,
        "y": 100,
        "wires": [
            [
                "a0af3566ffceb3f8"
            ]
        ]
    },
    {
        "id": "a0af3566ffceb3f8",
        "type": "change",
        "z": "99999b8a6931f0b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "days",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 100,
        "wires": [
            [
                "1b1a62ef8dba6db3"
            ]
        ]
    },
    {
        "id": "dd2d19659f772bd6",
        "type": "change",
        "z": "99999b8a6931f0b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "days",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 110,
        "y": 100,
        "wires": [
            [
                "95e1a5150b7de370"
            ]
        ]
    },
    {
        "id": "49ec4c4470a0148d",
        "type": "change",
        "z": "99999b8a6931f0b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"labels\":[],\"data\":[],\"series\":[]}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 360,
        "wires": [
            [
                "055894d9e16f7b19",
                "1b5a13f28dda3cbe"
            ]
        ]
    },
    {
        "id": "7313a58514606374",
        "type": "ui_template",
        "z": "99999b8a6931f0b2",
        "group": "5ad478847c2d5ed0",
        "name": "ProgressBar",
        "order": 4,
        "width": 10,
        "height": 1,
        "format": "<style>\n    .w3-border {\n        border: 1px solid #ccc!important;\n    }\n    .w3-green, .w3-hover-green:hover {\n        color: #fff!important;\n        background-color: #4CAF50!important;\n    }\n</style>\n<div>\n    <div class=\"w3-border\">\n      <div class=\"w3-green\" style=\"height:5px; width:{{msg.counter}}%\"></div>\n        <div class=\"progress\">\n      <div class=\"determinate\" style=\"width: 70%\"></div>\n        </div>\n</div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 850,
        "y": 600,
        "wires": [
            [
                "025d6114157a13dd"
            ]
        ]
    },
    {
        "id": "88afb3b01aa57023",
        "type": "counter-loop",
        "z": "99999b8a6931f0b2",
        "name": "",
        "counter": "counter",
        "counterType": "msg",
        "reset": true,
        "resetValue": "value-null",
        "initial": "1",
        "initialType": "num",
        "operator": "lt",
        "termination": "100",
        "terminationType": "num",
        "increment": "1",
        "incrementType": "num",
        "x": 410,
        "y": 560,
        "wires": [
            [
                "7313a58514606374"
            ],
            [
                "7313a58514606374"
            ]
        ]
    },
    {
        "id": "cbf3cc5e03056899",
        "type": "delay",
        "z": "99999b8a6931f0b2",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 170,
        "y": 600,
        "wires": [
            [
                "88afb3b01aa57023"
            ]
        ]
    },
    {
        "id": "025d6114157a13dd",
        "type": "switch",
        "z": "99999b8a6931f0b2",
        "name": "continue if counter is defined",
        "property": "counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 740,
        "wires": [
            [
                "cbf3cc5e03056899"
            ]
        ]
    },
    {
        "id": "4429d83f4f6b9b34",
        "type": "file in",
        "z": "99999b8a6931f0b2",
        "name": "",
        "filename": "/root/jlab/report.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 250,
        "y": 40,
        "wires": [
            [
                "09a44b6e6011899c"
            ]
        ]
    },
    {
        "id": "055894d9e16f7b19",
        "type": "ui_chart",
        "z": "99999b8a6931f0b2",
        "name": "",
        "group": "75f5394b01c07d88",
        "order": 2,
        "width": 5,
        "height": 10,
        "label": "Weekly Read Availability Status",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "0",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1110,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "55d1a08a6c14119c",
        "type": "change",
        "z": "99999b8a6931f0b2",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\t[{\t    \"labels\":$distinct(payload.(\t        $substring($string(Meter),0,1)=\"4\" ? 'Srinagar'\t    : ($substring($string(Meter),0,1)=\"3\" ? 'Jammu' : 'NA'))\t\t),\t    \"data\":$each(payload[`Last Billable Read`]{($floor(($toMillis($now())-$toMillis(`Last Billable Read`,'[D]-[M]-[Y] [H#01]:[m01]:[s01]')\t        )/(86400000*7)))<1 ? 'Below-Week':\t            (($floor(($toMillis($now())-$toMillis(`Last Billable Read`,'[D]-[M]-[Y] [H#01]:[m01]:[s01]')\t        )/(86400000*7)))>=1 and\t            ($floor(($toMillis($now())-$toMillis(`Last Billable Read`,'[D]-[M]-[Y] [H#01]:[m01]:[s01]')\t        )/(86400000*7)))<=3) ? 'Week-Month':'Above-Month':$each({\t    $substring($string(Meter),0,1):$count(Meter)},\t    function($v){$v})},function($v){$v}\t),\t\"series\":$keys(payload[`Last Billable Read`]{\t($floor(($toMillis($now())-$toMillis(`Last Billable Read`,'[D]-[M]-[Y] [H#01]:[m01]:[s01]')\t        )/(86400000*7)))<1 ? '1.Below-Week':\t            (($floor(($toMillis($now())-$toMillis(`Last Billable Read`,'[D]-[M]-[Y] [H#01]:[m01]:[s01]')\t        )/(86400000*7)))>=1 and\t            ($floor(($toMillis($now())-$toMillis(`Last Billable Read`,'[D]-[M]-[Y] [H#01]:[m01]:[s01]')\t        )/(86400000*7)))<=3) ? '2.Week-Month':'3.Above-Month':$count(Meter)}\t)\t}\t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 400,
        "wires": [
            [
                "055894d9e16f7b19"
            ]
        ]
    },
    {
        "id": "1b1a62ef8dba6db3",
        "type": "function",
        "z": "99999b8a6931f0b2",
        "name": "",
        "func": "var jtrim={};\nvar ktrim={};\nvar jtrimlist=[];\nvar ktrimlist=[];\nvar sn=0;\nvar dt=flow.get('days');\nfor (var i in msg.payload)\n{\n[day, month, year]=msg.payload[i]['Last Billable Read'].split(\" \")[0].split(\"-\");\nif(Math.floor((new Date()-new Date([year,month,day].join('-')))/86400000) <= dt)\n{\nswitch (msg.payload[i].Meter.substring(0,1))\n\t{\n\tcase '3':\n\tif(jtrim[msg.payload[i].Collector]){jtrim[msg.payload[i].Collector]+=1;}\n\telse {jtrim[msg.payload[i].Collector]=1;}\n\tbreak;\n\tcase '4':\n\tif(ktrim[msg.payload[i].Collector]){ktrim[msg.payload[i].Collector]+=1;}\n\telse {ktrim[msg.payload[i].Collector]=1;}\n\tbreak;\n\t}\t\n}\n}\nfor (i in jtrim){jtrimlist.push({Sno:++sn,Collector:i,Count:jtrim[i]})}\nsn=0;\nfor (i in ktrim){ktrimlist.push({Sno:++sn,Collector:i,Count:ktrim[i]})}\t\nvar jtotal=0;\nvar ktotal=0;\nfor (i in jtrimlist){jtotal=jtotal+jtrimlist[i].Count}\njtrimlist.push({Collector:\"Total Meters\",Count:jtotal});\nfor (i in ktrimlist){ktotal=ktotal+ktrimlist[i].Count}\nktrimlist.push({Collector:\"Total Meters\",Count:ktotal});\nreturn [[{jtrimlist}],[{ktrimlist}]]\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 40,
        "wires": [
            [
                "6f2409d0a5ac99c1"
            ],
            [
                "9f910944ef083225"
            ]
        ]
    },
    {
        "id": "6f2409d0a5ac99c1",
        "type": "change",
        "z": "99999b8a6931f0b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "jtrimlist",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 40,
        "wires": [
            [
                "6741d7d9949222f3"
            ]
        ]
    },
    {
        "id": "9f910944ef083225",
        "type": "change",
        "z": "99999b8a6931f0b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ktrimlist",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 100,
        "wires": [
            [
                "a217bfdc32724f4e"
            ]
        ]
    },
    {
        "id": "09a44b6e6011899c",
        "type": "csv to json ext",
        "z": "99999b8a6931f0b2",
        "name": "",
        "version": "0.1",
        "source": "filename",
        "delimiter": ",",
        "quote": "\"",
        "escape": "\"",
        "ignoreEmpty": false,
        "checkType": false,
        "trim": false,
        "noheader": false,
        "includeColumns": "0,2,8,10",
        "headers": "",
        "debug": false,
        "x": 470,
        "y": 40,
        "wires": [
            [
                "1b1a62ef8dba6db3",
                "55d1a08a6c14119c",
                "d9fdfdcec57d3241",
                "940499c62622124a"
            ]
        ]
    },
    {
        "id": "1b5a13f28dda3cbe",
        "type": "ui_chart",
        "z": "99999b8a6931f0b2",
        "name": "",
        "group": "75f5394b01c07d88",
        "order": 1,
        "width": 5,
        "height": 10,
        "label": "All Meter Details",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "0",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1260,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "d9fdfdcec57d3241",
        "type": "function",
        "z": "99999b8a6931f0b2",
        "name": "",
        "func": "var out=msg.payload.reduce(function(arr,cur){\nif(arr[cur[\"Status Code\"]][\"jmu\"]>0)\n\t{if(cur.Meter.substring(0,1)==\"3\"){arr[cur[\"Status Code\"]][\"jmu\"]=++arr[cur[\"Status Code\"]][\"jmu\"]}}\nelse if (cur.Meter.substring(0,1)==\"3\") {arr[cur[\"Status Code\"]][\"jmu\"]=1} \nif(arr[cur[\"Status Code\"]][\"kmr\"]>0)\n{if (cur.Meter.substring(0,1)==\"4\"){arr[cur[\"Status Code\"]][\"kmr\"]=++arr[cur[\"Status Code\"]][\"kmr\"]}}\n else if (cur.Meter.substring(0,1)==\"4\") {arr[cur[\"Status Code\"]][\"kmr\"]=1}\nreturn arr;\n},{Inventory:{jmu:0,kmr:0},Normal:{jmu:0,kmr:0},Lost:{jmu:0,kmr:0},Discovered:{jmu:0,kmr:0},Failed:{jmu:0,kmr:0},Installed:{jmu:0,kmr:0}});\nvar data=[out].reduce(function(acc,cur){\nfor (var i in cur){acc.push([cur[i].jmu,cur[i].kmr])}\nreturn acc\n},[]);\nmsg.payload=[{\"series\":[\"Inventory\",\"Normal\",\"Lost\",\"Discovered\",\"Failed\",\"Installed\"],data,\"labels\":[\"Jammu\",\"Srinagar\"]}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 280,
        "wires": [
            [
                "1b5a13f28dda3cbe",
                "252f8e0bfb55800a"
            ]
        ]
    },
    {
        "id": "940499c62622124a",
        "type": "function",
        "z": "99999b8a6931f0b2",
        "name": "",
        "func": "var jtrim={};\nvar ktrim={};\nvar data=[];\nfor (var i in msg.payload)\n{\n\tif(msg.payload[i]['Last Billable Read']!=\"\"){\n\t [day, month, year]=msg.payload[i]['Last Billable Read'].split(\" \")[0].split(\"-\");\n\n\t\n\t switch (msg.payload[i].Meter.substring(0,1))\n\t\t{\n\t\tcase '3':\n\t\tif(Math.floor((new Date()-new Date([year,month,day].join('-')))/(86400000*7)) <=4)\n\t\t{\n\t\t\tif(jtrim[Math.floor((new Date()-new Date([year,month,day].join('-')))/(86400000*7))]){jtrim[Math.floor((new Date()-new Date([year,month,day].join('-')))/(86400000*7))]+=1;}\n\t\t\telse {jtrim[Math.floor((new Date()-new Date([year,month,day].join('-')))/(86400000*7))]=1;}\n\t\t}\n\t\telse {jtrim['Above 5']=jtrim['Above 5']+1||0;}\n\t\tbreak;\n\t\tcase '4':\n\t\tif(Math.floor((new Date()-new Date([year,month,day].join('-')))/(86400000*7)) <=4)\n\t\t{\n\t\t\tif(ktrim[Math.floor((new Date()-new Date([year,month,day].join('-')))/(86400000*7))]){ktrim[Math.floor((new Date()-new Date([year,month,day].join('-')))/(86400000*7))]+=1;}\n\t\t\telse {ktrim[Math.floor((new Date()-new Date([year,month,day].join('-')))/(86400000*7))]=1;}\n\t\t}\n\t\telse {ktrim['Above 5']=ktrim['Above 5']+1||0;}\n\t\tbreak;\n\t\t}\t\n\t}\n\t\n}\nvar nseries=[jtrim].reduce(function(acc,cur){\n\tfor (i in cur){acc.push(i+\"W\")}\n\t\treturn acc;\n},[])\n\nfor(i in jtrim){data.push([jtrim[i],ktrim[i]])}\nmsg.payload=[{series:nseries,\"data\":data,labels:[\"Jammu\",\"Srinagar\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 340,
        "wires": [
            [
                "323655072d07aa46",
                "055894d9e16f7b19"
            ]
        ]
    },
    {
        "id": "323655072d07aa46",
        "type": "debug",
        "z": "99999b8a6931f0b2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 400,
        "wires": []
    },
    {
        "id": "252f8e0bfb55800a",
        "type": "debug",
        "z": "99999b8a6931f0b2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 260,
        "wires": []
    },
    {
        "id": "96b2f69e17f51a17",
        "type": "easy-oracle",
        "z": "99999b8a6931f0b2",
        "name": "oracledb",
        "server": "f18ba21cdc1239d4",
        "x": 900,
        "y": 680,
        "wires": [
            [
                "8e6077c401e0db95"
            ]
        ]
    },
    {
        "id": "90747004d28d6bc7",
        "type": "ui_table",
        "z": "99999b8a6931f0b2",
        "group": "b1376e2c4dfa8b6e",
        "name": "MonthlyBilling",
        "order": 1,
        "width": 20,
        "height": 10,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1180,
        "y": 920,
        "wires": []
    },
    {
        "id": "0b2a5879a6d2dc13",
        "type": "debug",
        "z": "99999b8a6931f0b2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 780,
        "wires": []
    },
    {
        "id": "0850539410f90d7a",
        "type": "change",
        "z": "99999b8a6931f0b2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.rows",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 900,
        "wires": [
            [
                "90747004d28d6bc7"
            ]
        ]
    },
    {
        "id": "8e6077c401e0db95",
        "type": "function",
        "z": "99999b8a6931f0b2",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 820,
        "wires": [
            [
                "0850539410f90d7a",
                "0b2a5879a6d2dc13"
            ]
        ]
    },
    {
        "id": "4fa73dd9.83cca4",
        "type": "comment",
        "z": "d7fc6821db1af157",
        "name": "File Browser",
        "info": "1) Update the default folder in the Init node\n2) Update the default folder in the Reset node as well\n3) You can duplicate the Reset nodes and use them as saved shortcuts\n4) Check the Convert Timestamps function node if you want to see your dates in a different format. I just used the Javascript toISOString format.\n5) The Graph button can read any CSV file which have any number of values, but the first column always contains a timestamp column with javascript timestamp of the data point.",
        "x": 130,
        "y": 60,
        "wires": []
    },
    {
        "id": "d185a45.2327a58",
        "type": "inject",
        "z": "d7fc6821db1af157",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "change",
        "payload": "d:\\",
        "payloadType": "str",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "a715f7a4.a398a8",
        "type": "ui_button",
        "z": "d7fc6821db1af157",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "refresh",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "eb17c7ee.e61988",
        "type": "ui_dropdown",
        "z": "d7fc6821db1af157",
        "name": "File Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a file",
        "group": "160e81fb.f1c86e",
        "order": 6,
        "width": 5,
        "height": 1,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 930,
        "y": 160,
        "wires": [
            [
                "be4830df.5775d"
            ]
        ]
    },
    {
        "id": "dd88bd23.37cde",
        "type": "function",
        "z": "d7fc6821db1af157",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a file\n    obj = {};\n    obj [msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 160,
        "wires": [
            [
                "eb17c7ee.e61988"
            ]
        ]
    },
    {
        "id": "3d4e5e51.bdf952",
        "type": "function",
        "z": "d7fc6821db1af157",
        "name": "Folder handling",
        "func": "let folder = context.get(\"folder\");\nif (folder===undefined) {\n    folder=\"/\";\n    context.set(\"folder\", folder);\n}\n\nlet hidden = context.get(\"hidden\");\nif (hidden===undefined) {\n    hidden=false;\n    context.set(\"hidden\", hidden);\n}\n\nif (msg.topic===\"up\") {\n    var the_arr = folder.split('/');\n    the_arr.pop();\n    folder=the_arr.join('/'); \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"change\") {\n    folder=msg.payload;    \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"hidden\") {\n    hidden=msg.payload;    \n    context.set(\"hidden\", hidden);\n}\n\nmsg.payload = {\"start\":folder, \"hidden\": hidden};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 220,
        "wires": [
            [
                "399ac341.7d43bc",
                "4a72dd4f8b17aabc",
                "f09829f1aeb9c925"
            ]
        ]
    },
    {
        "id": "399ac341.7d43bc",
        "type": "ui_text",
        "z": "d7fc6821db1af157",
        "group": "160e81fb.f1c86e",
        "order": 3,
        "width": 9,
        "height": 1,
        "name": "",
        "label": "Folder:",
        "format": "{{msg.payload.start}}",
        "layout": "row-left",
        "x": 520,
        "y": 100,
        "wires": []
    },
    {
        "id": "80940e39.5035b",
        "type": "ui_button",
        "z": "d7fc6821db1af157",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Open",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "folder_open",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "8c1dfaac.979588"
            ]
        ]
    },
    {
        "id": "8c1dfaac.979588",
        "type": "function",
        "z": "d7fc6821db1af157",
        "name": "Change folder",
        "func": "// Get the filename from the flow context\nlet folderselected = flow.get(\"folderselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (folderselected===undefined) {\n    return;\n}\n\nmsg.topic = \"change\";\nmsg.payload = folderselected;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 440,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "58414ec4.c716e",
        "type": "ui_button",
        "z": "d7fc6821db1af157",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "autorenew",
        "payload": "d:\\",
        "payloadType": "str",
        "topic": "change",
        "topicType": "str",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "37485c24.212054",
        "type": "ui_dropdown",
        "z": "d7fc6821db1af157",
        "name": "Folder Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a folder",
        "group": "160e81fb.f1c86e",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 940,
        "y": 260,
        "wires": [
            [
                "2875c79f.531558"
            ]
        ]
    },
    {
        "id": "ebc234be.d53fe8",
        "type": "function",
        "z": "d7fc6821db1af157",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a foler\n    obj = {};\n    obj [\"[\"+msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')+\"]\"]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 260,
        "wires": [
            [
                "37485c24.212054"
            ]
        ]
    },
    {
        "id": "be4830df.5775d",
        "type": "change",
        "z": "d7fc6821db1af157",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "fileselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "2875c79f.531558",
        "type": "change",
        "z": "d7fc6821db1af157",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "folderselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "4a72dd4f8b17aabc",
        "type": "fs-file-lister",
        "z": "d7fc6821db1af157",
        "name": "Files",
        "start": "/home/pi",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 530,
        "y": 160,
        "wires": [
            [
                "dd88bd23.37cde"
            ]
        ]
    },
    {
        "id": "f09829f1aeb9c925",
        "type": "fs-file-lister",
        "z": "d7fc6821db1af157",
        "name": "Folders",
        "start": "/home/pi",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "directories",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 540,
        "y": 260,
        "wires": [
            [
                "ebc234be.d53fe8"
            ]
        ]
    }
]